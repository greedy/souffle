# Souffle - A Datalog Compiler
# Copyright (c) 2013, Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at:
# - https://opensource.org/licenses/UPL
# - <souffle root>/licenses/SOUFFLE-UPL.txt

dnl Positive test cases for evaluating Datalog programs

POSITIVE_TEST([access1],[evaluation])
POSITIVE_TEST([access2],[evaluation])
POSITIVE_TEST([access3],[evaluation])
POSITIVE_TEST([aggregates2],[evaluation fast])
POSITIVE_TEST([aggregates],[evaluation fast])
POSITIVE_TEST([aliases],[evaluation fast])
POSITIVE_TEST([arithm],[evaluation fast])
POSITIVE_TEST([average],[evaluation])
POSITIVE_TEST([binop],[evaluation fast])
POSITIVE_TEST([cat],[evaluation fast])
POSITIVE_TEST([comp-override1],[evaluation fast])
POSITIVE_TEST([comp-override2],[evaluation fast])
POSITIVE_TEST([comp-override3],[evaluation fast])
POSITIVE_TEST([components1],[evaluation])
POSITIVE_TEST([components2],[evaluation])
POSITIVE_TEST([components3],[evaluation fast])
POSITIVE_TEST([components],[evaluation])
POSITIVE_TEST([components_generic],[evaluation])
POSITIVE_TEST([contains],[evaluation fast])
POSITIVE_TEST([count_sccs1],[evaluation fast])
# TODO (see issue #128) POSITIVE_TEST([count_sccs2],[evaluation])
POSITIVE_TEST([counter],[evaluation fast])
POSITIVE_TEST([cprog1],[evaluation])
POSITIVE_TEST([cprog2],[evaluation])
POSITIVE_TEST([cprog3],[evaluation])
POSITIVE_TEST([cprog4],[evaluation])
POSITIVE_TEST([cprog5],[evaluation])
POSITIVE_TEST([cproject],[evaluation fast])
POSITIVE_TEST([empty_relations],[evaluation fast])
POSITIVE_TEST([facts],[evaluation fast])
POSITIVE_TEST([grammar],[evaluation])
POSITIVE_TEST([hex],[evaluation])
POSITIVE_TEST([independent_body1],[evaluation fast])
POSITIVE_TEST([independent_body2],[evaluation])
POSITIVE_TEST([index],[evaluation fast])
POSITIVE_TEST([indirect_negation],[evaluation fast])
POSITIVE_TEST([inline_functors],[evaluation fast])
POSITIVE_TEST([inline_negation1],[evaluation fast])
POSITIVE_TEST([inline_negation2],[evaluation])
POSITIVE_TEST([inline_nqueens],[evaluation])
POSITIVE_TEST([inline_records],[evaluation fast])
POSITIVE_TEST([inline_underscore],[evaluation fast])
POSITIVE_TEST([inline_unification],[evaluation fast])
POSITIVE_TEST([list],[evaluation fast])
POSITIVE_TEST([magic_2sat],[evaluation fast])
POSITIVE_TEST([magic_aggregates],[evaluation fast])
POSITIVE_TEST([magic_centroids],[evaluation])
POSITIVE_TEST([magic_circuit_sat],[evaluation])
POSITIVE_TEST([magic_components],[evaluation])
POSITIVE_TEST([magic_cprog1],[evaluation])
POSITIVE_TEST([magic_dfa],[evaluation])
POSITIVE_TEST([magic_dominance],[evaluation])
POSITIVE_TEST([magic_factoring],[evaluation])
POSITIVE_TEST([magic_goal],[evaluation])
POSITIVE_TEST([magic_lrg_attr_id],[evaluation])
POSITIVE_TEST([magic_movies],[evaluation])
POSITIVE_TEST([magic_names1],[evaluation])
POSITIVE_TEST([magic_nqueens],[evaluation])
POSITIVE_TEST([magic_perfect_numbers],[evaluation])
POSITIVE_TEST([magic_records4],[evaluation])
POSITIVE_TEST([magic_samegen],[evaluation])
POSITIVE_TEST([magic_store],[evaluation])
POSITIVE_TEST([magic_strategies],[evaluation])
POSITIVE_TEST([magic_string_substr],[evaluation])
POSITIVE_TEST([magic_turing1],[evaluation])
POSITIVE_TEST([match2],[evaluation])
POSITIVE_TEST([match3],[evaluation fast])
POSITIVE_TEST([match],[evaluation])
# TODO (see issue #298) POSITIVE_TEST([math], [evaluation])
POSITIVE_TEST([max],[evaluation])
POSITIVE_TEST([minmax],[evaluation])
POSITIVE_TEST([minmaxnum], [evaluation])
POSITIVE_TEST([mrtc],[evaluation])
POSITIVE_TEST([mul],[evaluation])
POSITIVE_TEST([multiple_heads],[evaluation])
POSITIVE_TEST([mutrecursion],[evaluation fast])
POSITIVE_TEST([neg1],[evaluation])
POSITIVE_TEST([neg2],[evaluation])
POSITIVE_TEST([neg3],[evaluation])
POSITIVE_TEST([neg4],[evaluation])
POSITIVE_TEST([neg5],[evaluation fast])
POSITIVE_TEST([neg6],[evaluation fast])
POSITIVE_TEST([number_constants],[evaluation fast])
POSITIVE_TEST([ordinals],[evaluation])
POSITIVE_TEST([plus],[evaluation fast])
POSITIVE_TEST([range],[evaluation fast])
POSITIVE_TEST([rec_lists2],[evaluation])
POSITIVE_TEST([rec_lists],[evaluation fast])
POSITIVE_TEST([recursion],[evaluation fast])
POSITIVE_TEST([relop],[evaluation fast])
POSITIVE_TEST([rmut2],[evaluation])
POSITIVE_TEST([rmut],[evaluation])
POSITIVE_TEST([set_ops],[evaluation])
POSITIVE_TEST([set_ops_output],[evaluation])
POSITIVE_TEST([simple],[evaluation])
POSITIVE_TEST([subsumption],[evaluation fast])
POSITIVE_TEST([subtype2],[evaluation])
POSITIVE_TEST([subtype],[evaluation fast])
POSITIVE_TEST([sum-aggregate],[evaluation fast])
POSITIVE_TEST([sum-aggregate2],[evaluation])
POSITIVE_TEST([term],[evaluation fast])
POSITIVE_TEST([turing1],[evaluation fast])
POSITIVE_TEST([unpacking],[evaluation fast])
POSITIVE_TEST([x9],[evaluation])
